# Licensed under the Apache-2.0 license

name: SPDM Validator Tests

on:
  schedule:
    - cron: '0 0 * * *'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  spdm_validator_tests:
    runs-on: ubuntu-24.04

    env:
      CARGO_INCREMENTAL: 0
      SCCACHE_VERSION: 0.8.2
      SCCACHE_GHA_CACHE_TO: sccache-caliptra-mcu-sw
      SCCACHE_GHA_CACHE_FROM: sccache-caliptra-mcu-sw
      # CPTRA_COVERAGE_PATH: /tmp

      # Change this to a new random value if you suspect the cache is corrupted
      SCCACHE_C_CUSTOM_CACHE_BUSTER: 8b42a6e70ec4

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Test commit name
        run: |
          echo "Build-Test: release_ref=$(git rev-parse HEAD)"

      - name: Install required packages
        run: |
          sudo apt-get update -qy && \
          sudo apt-get install -qy build-essential curl gcc-multilib gcc-riscv64-unknown-elf git rustup &&
          rustup toolchain install -c clippy,rust-src,llvm-tools,rustfmt,rustc-dev

      - name: Install cmake 3.x
        run: |
          wget https://github.com/Kitware/CMake/releases/download/v3.31.6/cmake-3.31.6-linux-x86_64.tar.gz &&
          mkdir -p /opt/cmake &&
          tar xvzf cmake-3.31.6-linux-x86_64.tar.gz -C /opt/cmake --strip-components=1 &&
          echo "/opt/cmake/bin" >> $GITHUB_PATH

      - name: Restore sccache binary
        uses: actions/cache/restore@v3
        id: sccache_bin_restore
        with:
          path: ~/.cargo/bin/sccache
          key: sccache-bin-${{ env.SCCACHE_VERSION }}-${{ env.SCCACHE_C_CUSTOM_CACHE_BUSTER }}

      - name: Install sccache
        if: steps.sccache_bin_restore.outputs.cache-hit != 'true'
        run: |
          cargo install sccache --version ${SCCACHE_VERSION} --no-default-features --features=gha --locked

      # Save the sccache binary immediately so we can reuse it in future runs
      # even if the rest of the current run fails.
      - name: Save sccache binary
        uses: actions/cache/save@v3
        if: steps.sccache_bin_restore.outputs.cache-hit != 'true'
        with:
          path: ~/.cargo/bin/sccache
          key: ${{ steps.sccache_bin_restore.outputs.cache-primary-key }}

      - name: Configure sccache
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('RUSTC_WRAPPER', process.env.HOME + '/.cargo/bin/sccache');
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Checkout spdm-emu repository
        uses: actions/checkout@v4
        with:
          repository: parvathib/spdm-emu
          ref: pbhogaraju/get-measurements
          path: spdm-emu
          submodules: recursive

      - name: Build spdm-emu
        run: |
          pushd spdm-emu
          git submodule update --init --recursive
          mkdir build
          pushd build
          cmake -DARCH=x64 -DTOOLCHAIN=GCC -DTARGET=Debug -DCRYPTO=openssl ..
          make copy_sample_key
          make
          popd
          popd

      - name: Run SPDM validator test tests on MCTP transport
        run: |
          export SPDM_VALIDATOR_DIR=$GITHUB_WORKSPACE/spdm-emu/build/bin
          cargo t -p tests-integration -- --test test_mctp_spdm_responder_conformance --nocapture  --include-ignored
          sccache --show-stats
    
      - name: Display SPDM Validator test results on MCTP transport
        run: |
          cat $GITHUB_WORKSPACE/test.log
      
      - name: Check for test failures
        run: |
          if grep -E 'test suite \(.*\) - pass: [0-9]+, fail: [1-9][0-9]*' $GITHUB_WORKSPACE/test.log; then
            echo "Test suite had failures."
            exit 1
          fi

      - name: Run SPDM validator test tests on DOE transport
        run: |
          export SPDM_VALIDATOR_DIR=$GITHUB_WORKSPACE/spdm-emu/build/bin
          cargo t -p tests-integration -- --test test_doe_spdm_responder_conformance --nocapture  --include-ignored
          sccache --show-stats

      - name: Upload logs and traces
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: spdm-doe-validator-test-results
          path: |
            test.log
            caliptra_spdm_validator.pcap
            spdm_device_validator_output.txt

      - name: Display SPDM Validator test results on DOE transport
        run: |
          cat $GITHUB_WORKSPACE/test.log

      - name: Check for test failures on DOE transport
        run: |
          if grep -E 'test suite \(.*\) - pass: [0-9]+, fail: [1-9][0-9]*' $GITHUB_WORKSPACE/test.log; then
            echo "Test suite had failures."
            exit 1
          fi
