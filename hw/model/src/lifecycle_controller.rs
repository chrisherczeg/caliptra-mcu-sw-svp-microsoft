// Licensed under the Apache-2.0 license

#![allow(unused)]

// These are the default lifecycle controller constants from the
// standard Caliptra RTL. These can be overridden by vendors.

// from caliptra-rtl/src/lc_ctrl/rtl/lc_ctrl_state_pkg.sv
const A0: u16 = 0b0110010010101110; // ECC: 6'b001010
const B0: u16 = 0b0111010111101110; // ECC: 6'b111110
const A1: u16 = 0b0000011110110100; // ECC: 6'b100101
const B1: u16 = 0b0000111111111110; // ECC: 6'b111101
const A2: u16 = 0b0011000111010010; // ECC: 6'b000111
const B2: u16 = 0b0111101111111110; // ECC: 6'b000111
const A3: u16 = 0b0010111001001101; // ECC: 6'b001010
const B3: u16 = 0b0011111101101111; // ECC: 6'b111010
const A4: u16 = 0b0100000111111000; // ECC: 6'b011010
const B4: u16 = 0b0101111111111100; // ECC: 6'b011110
const A5: u16 = 0b1010110010000101; // ECC: 6'b110001
const B5: u16 = 0b1111110110011111; // ECC: 6'b110001
const A6: u16 = 0b1001100110001100; // ECC: 6'b010110
const B6: u16 = 0b1111100110011111; // ECC: 6'b011110
const A7: u16 = 0b0101001100001111; // ECC: 6'b100010
const B7: u16 = 0b1101101101101111; // ECC: 6'b100111
const A8: u16 = 0b0111000101100000; // ECC: 6'b111001
const B8: u16 = 0b0111001101111111; // ECC: 6'b111001
const A9: u16 = 0b0010110001100011; // ECC: 6'b101010
const B9: u16 = 0b0110110001101111; // ECC: 6'b111111
const A10: u16 = 0b0110110100001000; // ECC: 6'b110011
const B10: u16 = 0b0110111110011110; // ECC: 6'b111011
const A11: u16 = 0b1001001001001100; // ECC: 6'b000011
const B11: u16 = 0b1101001111011100; // ECC: 6'b111111
const A12: u16 = 0b0111000001000000; // ECC: 6'b011110
const B12: u16 = 0b0111011101010010; // ECC: 6'b111110
const A13: u16 = 0b1001001010111110; // ECC: 6'b000010
const B13: u16 = 0b1111001011111110; // ECC: 6'b101110
const A14: u16 = 0b1001010011010010; // ECC: 6'b100011
const B14: u16 = 0b1011110111010011; // ECC: 6'b101111
const A15: u16 = 0b0110001010001101; // ECC: 6'b000111
const B15: u16 = 0b0110111111001101; // ECC: 6'b011111
const A16: u16 = 0b1011001000101000; // ECC: 6'b010111
const B16: u16 = 0b1011001011111011; // ECC: 6'b011111
const A17: u16 = 0b0001111001110001; // ECC: 6'b001001
const B17: u16 = 0b1001111111110101; // ECC: 6'b011011
const A18: u16 = 0b0010110110011011; // ECC: 6'b000100
const B18: u16 = 0b0011111111011111; // ECC: 6'b010101
const A19: u16 = 0b0100110110001100; // ECC: 6'b101010
const B19: u16 = 0b1101110110111110; // ECC: 6'b101011

// The C/D values are used for the encoded LC transition counter.

const C0: u16 = 0b0001010010011110; // ECC: 6'b011100
const D0: u16 = 0b1011011011011111; // ECC: 6'b111100
const C1: u16 = 0b0101101011000100; // ECC: 6'b111000
const D1: u16 = 0b1111101011110100; // ECC: 6'b111101
const C2: u16 = 0b0001111100100100; // ECC: 6'b100011
const D2: u16 = 0b0001111110111111; // ECC: 6'b100111
const C3: u16 = 0b1100111010000101; // ECC: 6'b011000
const D3: u16 = 0b1100111011101111; // ECC: 6'b011011
const C4: u16 = 0b0100001010011111; // ECC: 6'b011000
const D4: u16 = 0b0101101110111111; // ECC: 6'b111100
const C5: u16 = 0b1001111000100010; // ECC: 6'b111000
const D5: u16 = 0b1111111110100010; // ECC: 6'b111110
const C6: u16 = 0b0010011110000110; // ECC: 6'b010000
const D6: u16 = 0b0111011111000110; // ECC: 6'b011101
const C7: u16 = 0b0010111101000110; // ECC: 6'b000110
const D7: u16 = 0b1010111111000110; // ECC: 6'b111111
const C8: u16 = 0b0000001011011011; // ECC: 6'b000001
const D8: u16 = 0b1010101111011011; // ECC: 6'b111011
const C9: u16 = 0b0111000011000110; // ECC: 6'b110001
const D9: u16 = 0b1111111011001110; // ECC: 6'b110011
const C10: u16 = 0b0100001000010010; // ECC: 6'b110110
const D10: u16 = 0b0111001010110110; // ECC: 6'b110111
const C11: u16 = 0b0100101111110001; // ECC: 6'b000001
const D11: u16 = 0b0110101111110011; // ECC: 6'b110111
const C12: u16 = 0b1000100101000001; // ECC: 6'b000001
const D12: u16 = 0b1011110101001111; // ECC: 6'b001011
const C13: u16 = 0b1000000000010001; // ECC: 6'b011111
const D13: u16 = 0b1001100010110011; // ECC: 6'b111111
const C14: u16 = 0b0101110000000100; // ECC: 6'b111110
const D14: u16 = 0b1111111010001101; // ECC: 6'b111110
const C15: u16 = 0b1100001000001001; // ECC: 6'b001011
const D15: u16 = 0b1110011000011011; // ECC: 6'b111011
const C16: u16 = 0b0101001001101100; // ECC: 6'b001000
const D16: u16 = 0b0111111001111110; // ECC: 6'b001001
const C17: u16 = 0b0100001001110100; // ECC: 6'b010100
const D17: u16 = 0b1100101001110111; // ECC: 6'b110110
const C18: u16 = 0b1100000001100111; // ECC: 6'b100000
const D18: u16 = 0b1100011101110111; // ECC: 6'b100101
const C19: u16 = 0b1010000001001010; // ECC: 6'b101111
const D19: u16 = 0b1111011101101010; // ECC: 6'b101111
const C20: u16 = 0b1001001001010101; // ECC: 6'b001110
const D20: u16 = 0b1101111011011101; // ECC: 6'b001111
const C21: u16 = 0b1001010000011011; // ECC: 6'b100000
const D21: u16 = 0b1001111000111011; // ECC: 6'b110101
const C22: u16 = 0b1011101101100001; // ECC: 6'b000100
const D22: u16 = 0b1011111101111111; // ECC: 6'b000110
const C23: u16 = 0b1101101000000111; // ECC: 6'b001100
const D23: u16 = 0b1101111011100111; // ECC: 6'b101110

const COUNT_1: [u16; 24] = [
    C23, C22, C21, C20, C19, C18, C17, C16, C15, C14, C13, C12, C11, C10, C9, C8, C7, C6, C5, C4,
    C3, C2, C1, D0,
];

const TEST_UNLOCKED_1: [u16; 20] = [
    A19, A18, A17, A16, A15, A14, A13, A12, A11, A10, A9, A8, A7, A6, A5, A4, A3, A2, A1, B0,
];
